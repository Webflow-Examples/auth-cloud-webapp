---
import Layout from '../layouts/Layout.astro';
import { auth } from "../utils/auth";

const authInstance = await auth(Astro.locals.runtime.env);

const session = await authInstance.api.getSession({
  headers: Astro.request.headers,
});
console.log("session", session);

// Redirect if already authenticated
if (session) {
  return Astro.redirect("/app");
}
---

<Layout>
  <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Create your account
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          Or 
          <a
            href="/app/login"
            class="font-medium"
          >
            sign in to your existing account
          </a>
        </p>
      </div>
      
      <form id="signupForm" class="mt-8 space-y-6" method="POST">
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="name" class="sr-only">
              Full name
            </label>
            <input
              id="name"
              name="name"
              type="text"
              autocomplete="name"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Full name"
            />
          </div>
          <div>
            <label for="email" class="sr-only">
              Email address
            </label>
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Email address"
            />
          </div>
          <div>
            <label for="password" class="sr-only">
              Password
            </label>
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="new-password"
              required
              minlength="8"
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Password (min 8 characters)"
            />
          </div>
        </div>

        <div id="error" class="text-red-600 text-sm text-center hidden"></div>

        <div class="text-white">
          <button
            type="submit"
            id="submitBtn"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-[#fff] bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Create account
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  import { authClient } from "../utils/auth-client";

  const form = document.getElementById('signupForm') as HTMLFormElement;
  const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement;
  const errorDiv = document.getElementById('error') as HTMLDivElement;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;
    const name = formData.get('name') as string;

    // Show loading state
    submitBtn.disabled = true;
    submitBtn.textContent = 'Creating account...';
    errorDiv.classList.add('hidden');

    try {
      const { data, error } = await authClient.signUp.email({
        email,
        password,
        name,
      });

      if (error) {
        errorDiv.textContent = error.message || 'Signup failed';
        errorDiv.classList.remove('hidden');
      } else if (data) {
        // Redirect on success
        window.location.href = '/app';
      }
    } catch (err) {
      errorDiv.textContent = 'An unexpected error occurred';
      errorDiv.classList.remove('hidden');
    } finally {
      // Reset loading state
      submitBtn.disabled = false;
      submitBtn.textContent = 'Create account';
    }
  });
</script>
